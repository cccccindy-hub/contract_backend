<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnroad.client.mapper.SysClientMapper">
    
    <resultMap type="SysClient" id="SysClientResult">
        <result property="id"    column="id"    />
		<result property="parentCompanyCode"    column="parent_company_code"    />
		<result property="companyCode"    column="company_code"    />
        <result property="clientName"    column="client_name"    />
        <result property="clientLocation"    column="client_location"    />
        <result property="serviceCountry"    column="service_country"  typeHandler = "com.nnroad.framework.datasource.ListToStringHandler" />
        <result property="industry"    column="industry"    />
		<result property="companyNameEn"    column="company_name_en"    />
		<result property="companyNameLocal"    column="company_name_local"    />
        <result property="primaryServiceType"    column="primary_service_type"    />
        <result property="secondaryServiceType"    column="secondary_service_type"    />
        <result property="otherServiceTypes"    column="other_service_types" typeHandler = "com.nnroad.framework.datasource.ListToStringHandler"    />
        <result property="serviceTypeRemark"    column="service_type_remark"    />
        <result property="contactPersonName"    column="contact_person_name"    />
        <result property="contactPersonEmail"    column="contact_person_email"    />
        <result property="contactPhoneNumber"    column="contact_phone_number"    />
        <result property="startDate"    column="start_date"    />
        <result property="endDate"    column="end_date"    />
        <result property="remark"    column="remark"    />
		<result property="status"    column="status"    />
		<result property="org"    column="org"    />
        <result property="extraData"    column="extra_data"  typeHandler = "com.nnroad.framework.datasource.JsonTypeHandler"  />
        <result property="createdAt"    column="created_at"    />
        <result property="modifiedAt"    column="modified_at"    />
    </resultMap>

    <sql id="selectSysClientVo">
        select id, client_name, parent_company_code, company_code, client_location, service_country, industry, company_name_en, company_name_local, primary_service_type, secondary_service_type, other_service_types, service_type_remark, contact_person_name, contact_person_email, contact_phone_number, start_date, end_date, remark, status, org, created_at, modified_at from sys_client
    </sql>
    

    <select id="selectSysClientList" parameterType="SysClient" resultMap="SysClientResult">
        SELECT *
		FROM sys_client
		WHERE 1=1
		    <if test="clientName != null and clientName != ''">
		        AND client_name LIKE CONCAT('%', #{clientName}, '%')
		    </if>
			<if test="id != null">
				AND id = #{id}
			</if>
		    <if test="clientLocation != null and clientLocation != ''">
		        AND client_location = #{clientLocation}
		    </if>
			<if test="parentCompanyCode != null">
				AND parent_company_code = #{parentCompanyCode}
			</if>
			<if test="companyCode != null">
				AND company_code = #{companyCode}
			</if>
		    <if test="industry != null">
    			AND industry = 'Technology'
			</if>
		    <if test="primaryServiceType != null and primaryServiceType != ''">
		        AND primary_service_type = #{primaryServiceType}
		    </if>
		    <if test="secondaryServiceType != null and secondaryServiceType != ''">
		        AND secondary_service_type = #{secondaryServiceType}
		    </if>
		    <if test="otherServiceTypes != null and otherServiceTypes != ''">
		        AND other_service_types = #{otherServiceTypes}
		    </if>
		    <if test="serviceTypeRemark != null and serviceTypeRemark != ''">
		        AND service_type_remark = #{serviceTypeRemark}
		    </if>
		    <if test="contactPersonName != null and contactPersonName != ''">
		        AND contact_person_name LIKE CONCAT('%', #{contactPersonName}, '%')
		    </if>
		    <if test="contactPersonEmail != null and contactPersonEmail != ''">
		        AND contact_person_email = #{contactPersonEmail}
		    </if>
		    <if test="contactPhoneNumber != null and contactPhoneNumber != ''">
		        AND contact_phone_number = #{contactPhoneNumber}
		    </if>
			<if test="companyCode != null and companyCode != ''">
				AND company_code = #{companyCode}
			</if>
		    <if test="startDate != null">
		        AND start_date = #{startDate, jdbcType=DATE}
		    </if>
		    <if test="endDate != null">
		        AND end_date = #{endDate, jdbcType=DATE}
		    </if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="org != null">
				AND org = #{org}
			</if>
		    <if test="createdAt != null">
		        AND created_at = #{createdAt}
		    </if>
		    <if test="modifiedAt != null">
		        AND modified_at = #{modifiedAt}
		    </if>

			<if test="extraData != null and extraData.size() > 0">
				<!-- Loop over the extraData map -->
				<foreach collection="extraData.entrySet()" index="key" item="element" >
					<if test="element.type == 'nested'">
						<foreach collection="element.value" index="childKey" item="childElement">
							<if test="childElement != null and childElement != ''">
						 		AND JSON_UNQUOTE(JSON_EXTRACT(extra_data, '$.\"${key}\".\"${childKey}\"')) = #{childElement}
							</if>
						</foreach>
					</if>
					<if test="element.type == 'regular'">
						<if test="element.value != null and element.value != ''">
						AND JSON_UNQUOTE(JSON_EXTRACT(extra_data, '$.\"${key}\"')) = #{element.value}
						</if>
					</if>
				</foreach>
			</if>
		ORDER BY created_at DESC, client_name ASC
	</select>
    
    <select id="selectSysClientById" parameterType="Long" resultMap="SysClientResult">
	    SELECT * FROM sys_client
	    WHERE id = #{id}
	</select>

   <insert id="insertSysClient" parameterType="SysClient" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO sys_client (
	        client_name,
	   		parent_company_code,
	        company_code,
	        client_location,
	        service_country,
	        industry,
	   		company_name_en,
	   		company_name_local,
	        primary_service_type,
	        secondary_service_type,
	        other_service_types,
	        service_type_remark,
	        contact_person_name,
	        contact_person_email,
	        contact_phone_number,
	        start_date,
	        end_date,
	        remark,
	   		status,
	   		org,
	        extra_data,
	   		create_by,
	   		update_by
	    ) VALUES (
	        #{clientName},
	   		#{parentCompanyCode},
	        #{companyCode},
	        #{clientLocation},
	        #{serviceCountry, typeHandler=com.nnroad.framework.datasource.ListToStringHandler},
	        #{industry},
	   		#{companyNameEn},
	   		#{companyNameLocal},
	        #{primaryServiceType},
	        #{secondaryServiceType},
	        #{otherServiceTypes, typeHandler=com.nnroad.framework.datasource.ListToStringHandler},
	        #{serviceTypeRemark},
	        #{contactPersonName},
	        #{contactPersonEmail},
	        #{contactPhoneNumber},
	        #{startDate},
	        #{endDate},
	        #{remark},
	   		#{status},
	   		#{org},
	        #{extraData, typeHandler=com.nnroad.framework.datasource.JsonTypeHandler},
		   	#{createBy},
		   	#{updateBy}
	    );
</insert>

	<insert id="insertClientContract" parameterType="map">
		INSERT INTO client_contract (client_id,company_code,extra_data)
		VALUES (#{client_id}, #{company_code}, #{extra_data})
	</insert>

    <update id="updateSysClient" parameterType="SysClient">
        update sys_client
        SET
	        client_name = #{clientName},
			parent_company_code = #{parentCompanyCode},
			company_code = #{companyCode},
	        client_location = #{clientLocation},
	        service_country = #{serviceCountry, jdbcType=ARRAY, typeHandler=com.nnroad.framework.datasource.ListToStringHandler},
	        industry = #{industry},
			company_name_en = #{companyNameEn},
			company_name_local = #{companyNameLocal},
	        primary_service_type = #{primaryServiceType},
	        secondary_service_type = #{secondaryServiceType},
	        other_service_types = #{otherServiceTypes, jdbcType=ARRAY, typeHandler=com.nnroad.framework.datasource.ListToStringHandler},
	        service_type_remark = #{serviceTypeRemark},
	        contact_person_name = #{contactPersonName},
	        contact_person_email = #{contactPersonEmail},
	        contact_phone_number = #{contactPhoneNumber},
	        start_date = #{startDate},
	        end_date = #{endDate},
	        remark = #{remark},
			status = #{status},
			org = #{org},
	        created_at = #{createdAt},
	        modified_at = #{modifiedAt},
	        extra_data = #{extraData, typeHandler=com.nnroad.framework.datasource.JsonTypeHandler},
			create_by = #{createBy},
			update_by = #{updateBy}
        where company_code = #{companyCode}
    </update>

    <delete id="deleteSysClientById" parameterType="Long">
        delete from sys_client where id = #{id}
    </delete>

    <delete id="deleteSysClientByIds" parameterType="String">
        delete from sys_client where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <select id="getClientByVendorId" parameterType="Long" resultMap="SysClientResult">
       SELECT DISTINCT c.*
	   FROM sys_client c
	   JOIN sys_employee e ON c.id = e.client_id
	   WHERE e.vendor_id = #{vendorId}
    </select>

	<select id="selectClient" resultMap="SysClientResult">
		<include refid="selectSysClientVo"/>
		WHERE company_code = #{companyCode}
	</select>

	<select id="selectBasicByClientCode" resultMap="SysClientResult">
		select
			*
		from
			sys_client
		where
			company_code = #{clientCode} LIMIT 1
	</select>

	<select id="selectByClientName" resultMap="SysClientResult">
		select
		    company_code,client_name
		from
			sys_client
		where
		    1=1
		    <if test="clientName != null and clientName != ''">
				AND client_name like CONCAT(#{clientName}, '%')
			</if>
		limit 20;
	</select>

	<select id="checkMaxCodeClient" resultType="integer" parameterType="SysClient">
		select count(1) from sys_client where company_code >= #{companyCode}  and company_code like concat(#{params.keyPrefix}, '%')
	</select>

	<select id="getMaxCodeClient" resultType="string" parameterType="string">
		select max(company_code) from sys_client where  company_code  like concat(#{keyPrefix}, '%')
	</select>

	<select id="selectExisting" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRHK')
		AND #{startDate} > cc.start_date
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') > #{startDate} OR STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') IS NULL)
	</select>

	<select id="selectNew" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRHK')
		AND (cc.start_date BETWEEN #{startDate} AND #{endDate})
	</select>

	<select id="selectExit" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRHK')
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') BETWEEN #{estartDate} AND #{eendDate})
		AND cc.start_date IS NOT NULL
	</select>


	<select id="selectExisting2" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRSH', 'HRBJ')
		AND cc.start_date &lt; #{startDate}
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') > #{startDate} OR STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') IS NULL)
	</select>

	<select id="selectNew2" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRSH', 'HRBJ')
		AND (cc.start_date BETWEEN #{startDate} AND #{endDate})
	</select>

	<select id="selectExit2" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('HRSH', 'HRBJ')
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') BETWEEN #{estartDate} AND #{eendDate})
		AND cc.start_date IS NOT NULL
	</select>

	<select id="selectTopFDIExisting" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('Top FDI')
		AND cc.start_date &lt; #{startDate}
		AND STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') > #{startDate} OR JSON_EXTRACT(cc.extra_data, '$."157"') IS NULL
	</select>

	<select id="selectTopFDINew" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('Top FDI')
		AND (cc.start_date BETWEEN #{startDate} AND #{endDate})
	</select>

	<select id="selectTopFDIExit" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('Top FDI')
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') BETWEEN #{estartDate} AND #{eendDate})
		AND cc.start_date IS NOT NULL
	</select>

	<select id="selectFDIExisting" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('FDI')
		AND #{startDate} > cc.start_date
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') > #{startDate} OR STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') IS NULL)
	</select>

	<select id="selectFDINew" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('FDI')
		AND (cc.start_date BETWEEN #{startDate} AND #{endDate})
	</select>

	<select id="selectFDIExit" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT cc.parent_company_code)
		FROM sys_client cc
		WHERE org IN ('FDI')
		AND (STR_TO_DATE(JSON_UNQUOTE(JSON_EXTRACT(cc.extra_data, '$."157"')), '%Y-%m-%d') BETWEEN #{estartDate} AND #{eendDate})
		AND cc.start_date IS NOT NULL
	</select>


	<select id="getEmployerList" resultMap="SysClientResult">
		SELECT
			`sys`.`company_code`,
			`sys`.`client_name`
		FROM
			`sys_client` `sys`
		WHERE
			((
				 `sys`.`status` = 'ongoing'
				 )
				OR ( `sys`.`status` = 'active' ))
	</select>
</mapper>