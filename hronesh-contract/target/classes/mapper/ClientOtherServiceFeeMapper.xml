<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnroad.client.mapper.ClientOtherServiceFeeMapper">

    <resultMap type="ClientOtherServiceFee" id="ClientOtherServiceFeeResult">
        <result property="id"    column="id"    />
        <result property="clientId"    column="client_id"    />
        <result property="employeeId"    column="employee_id"    />
        <result property="companyCode"    column="company_code"    />
        <result property="employeeCode"    column="employee_code"    />
        <result property="clientName"    column="client_name"    />
        <result property="employeeName"    column="employee_name"    />
        <result property="period"    column="period"    />
        <result property="extraData"    column="extraData"    />
        <result property="createdAt"    column="created_at"    />
        <result property="modifiedAt"    column="modified_at"    />
    </resultMap>

    <sql id="selectClientOtherServiceFeeVo">
        select id, client_id, employee_id, client_name, employee_name, company_code, employee_code, period, extraData, created_at, modified_at, create_by, update_by from client_other_service_fee
    </sql>

    <select id="selectClientOtherServiceFeeList" parameterType="ClientOtherServiceFee" resultMap="ClientOtherServiceFeeResult">
        <include refid="selectClientOtherServiceFeeVo"/>
        <where>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND DATE_FORMAT(period,'%Y-%m') >= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND #{params.endTime} >= DATE_FORMAT(period,'%Y-%m')
            </if>
            <if test="period != null "> and period = #{period}</if>
            <if test="clientId != null "> and client_id = #{clientId}</if>
            <if test="employeeId != null "> and employee_id = #{employeeId}</if>
            <if test="clientName != null "> and client_name = #{clientName}</if>
            <if test="employeeName != null "> and employee_name = #{employeeName}</if>
            <if test="companyCode != null "> and company_code = #{companyCode}</if>
            <if test="employeeCode != null "> and employee_code = #{employeeCode}</if>
        </where>
        ORDER BY period DESC
    </select>

    <select id="selectClientOtherServiceFeeById" parameterType="Long" resultMap="ClientOtherServiceFeeResult">
        <include refid="selectClientOtherServiceFeeVo"/>
        where id = #{id}
    </select>

    <insert id="insertClientOtherServiceFee" parameterType="ClientOtherServiceFee" useGeneratedKeys="true" keyProperty="id">
        insert into client_other_service_fee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">client_id,</if>
            <if test="employeeId != null">employee_id,</if>
            <if test="clientName != null ">client_name,</if>
            <if test="employeeName != null ">employee_name,</if>
            <if test="companyCode != null ">company_code,</if>
            <if test="employeeCode != null ">employee_code,</if>
            <if test="period != null">period,</if>
            <if test="extraData != null">extraData,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="modifiedAt != null">modified_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientId != null">#{clientId},</if>
            <if test="employeeId != null">#{employeeId},</if>
            <if test="clientName != null ">#{clientName},</if>
            <if test="employeeName != null ">#{employeeName},</if>
            <if test="companyCode != null ">#{companyCode},</if>
            <if test="employeeCode != null ">#{employeeCode},</if>
            <if test="period != null">#{period},</if>
            <if test="extraData != null">#{extraData},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="modifiedAt != null">#{modifiedAt},</if>
        </trim>
    </insert>

    <insert id="insertBatchByImport" parameterType="ClientOtherServiceFee" keyProperty="id" useGeneratedKeys="true">
        <choose>
            <when test="list != null and list.size() > 0">
                insert into client_other_service_fee
                (period, client_id, employee_id,  client_name, company_code, owner_ids, create_by,employee_code, employee_name)
                values
                <foreach collection="list" item="item" index="index" separator=",">
                    (#{item.period}, #{item.clientId}, #{item.employeeId}, #{item.clientName},#{item.companyCode},#{item.ownerIds},#{item.createBy},#{item.employeeCode},#{item.employeeName})
                </foreach>
            </when>
            <otherwise>
                select 1
            </otherwise>
        </choose>
    </insert>

    <update id="updateClientOtherServiceFee" parameterType="ClientOtherServiceFee">
        update client_other_service_fee
        <trim prefix="SET" suffixOverrides=",">
            <if test="clientId != null">client_id = #{clientId},</if>
            <if test="employeeId != null">employee_id = #{employeeId},</if>
            <if test="clientName != null ">client_name = #{clientName},</if>
            <if test="employeeName != null ">employee_name = #{employeeName},</if>
            <if test="companyCode != null ">company_code = #{companyCode},</if>
            <if test="employeeCode != null ">employee_code = #{employeeCode},</if>
            <if test="period != null">period = #{period},</if>
            <if test="extraData != null">extraData = #{extraData},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="modifiedAt != null">modified_at = #{modifiedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteClientOtherServiceFeeById" parameterType="Long">
        delete from client_other_service_fee where id = #{id}
    </delete>

    <delete id="deleteClientOtherServiceFeeByIds" parameterType="String">
        delete from client_other_service_fee where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>